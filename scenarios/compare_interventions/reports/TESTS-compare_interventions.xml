<testsuite name="compare_interventions.Compare interventions" tests="13" errors="0" failures="4" skipped="0" time="1.832418" timestamp="2021-11-03T13:26:18.042086" hostname="DESKTOP-CPB194U"><testcase classname="compare_interventions.Compare interventions" name="Draw DAG" status="passed" time="0.139634"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Draw DAG
    Given a simulation with parameters ... passed in 0.006s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given a connected repeating unit ... passed in 0.005s
    When we prune the following edges ... passed in 0.104s
      | s1                | s2                 |
      | quar_period       | n_exposed_n        |
      | quar_period       | cum_infections_n   |
      | quar_period       | cum_symptomatic_n  |
      | quar_period       | cum_severe_n       |
      | quar_period       | cum_critical_n     |
      | quar_period       | cum_deaths_n       |
      | quar_period       | cum_tests_n        |
      | interventions     | cum_infections_n   |
      | interventions     | cum_symptomatic_n  |
      | interventions     | cum_severe_n       |
      | interventions     | cum_critical_n     |
      | interventions     | cum_deaths_n       |
      | pop_type          | cum_deaths_n       |
      | pop_type          | cum_tests_n        |
      | pop_size          | cum_deaths_n       |
      | pop_size          | cum_tests_n        |
      | location          | cum_deaths_n       |
      | location          | cum_tests_n        |
      | pop_infected      | n_quarantined_n    |
      | pop_infected      | n_exposed_n        |
      | pop_infected      | cum_deaths_n       |
      | pop_infected      | cum_tests_n        |
      | n_days            | n_quarantined_n    |
      | n_days            | n_exposed_n        |
      | n_days            | cum_infections_n   |
      | n_days            | cum_symptomatic_n  |
      | n_days            | cum_severe_n       |
      | n_days            | cum_critical_n     |
      | n_days            | cum_deaths_n       |
      | n_days            | cum_tests_n        |
      | n_quarantined_n   | cum_infections_n1  |
      | n_quarantined_n   | cum_symptomatic_n1 |
      | n_quarantined_n   | cum_severe_n1      |
      | n_quarantined_n   | cum_critical_n1    |
      | n_quarantined_n   | cum_tests_n1       |
      | n_quarantined_n   | cum_deaths_n1      |
      | n_exposed_n       | n_quarantined_n1   |
      | n_exposed_n       | cum_symptomatic_n1 |
      | n_exposed_n       | cum_severe_n1      |
      | n_exposed_n       | cum_critical_n1    |
      | n_exposed_n       | cum_deaths_n1      |
      | n_exposed_n       | cum_tests_n1       |
      | cum_infections_n  | cum_severe_n1      |
      | cum_infections_n  | cum_critical_n1    |
      | cum_infections_n  | cum_deaths_n1      |
      | cum_infections_n  | cum_tests_n1       |
      | cum_symptomatic_n | n_exposed_n1       |
      | cum_symptomatic_n | cum_critical_n1    |
      | cum_symptomatic_n | cum_deaths_n1      |
      | cum_symptomatic_n | cum_tests_n1       |
      | cum_severe_n      | n_quarantined_n1   |
      | cum_severe_n      | n_exposed_n1       |
      | cum_severe_n      | cum_infections_n1  |
      | cum_severe_n      | cum_symptomatic_n1 |
      | cum_severe_n      | cum_tests_n1       |
      | cum_severe_n      | cum_deaths_n1      |
      | cum_critical_n    | n_quarantined_n1   |
      | cum_critical_n    | n_exposed_n1       |
      | cum_critical_n    | cum_infections_n1  |
      | cum_critical_n    | cum_symptomatic_n1 |
      | cum_critical_n    | cum_severe_n1      |
      | cum_critical_n    | cum_tests_n1       |
      | cum_tests_n       | n_exposed_n1       |
      | cum_tests_n       | cum_infections_n1  |
      | cum_tests_n       | cum_symptomatic_n1 |
      | cum_tests_n       | cum_severe_n1      |
      | cum_tests_n       | cum_critical_n1    |
      | cum_tests_n       | cum_deaths_n1      |
      | cum_deaths_n      | n_quarantined_n1   |
      | cum_deaths_n      | cum_infections_n1  |
      | cum_deaths_n      | cum_symptomatic_n1 |
      | cum_deaths_n      | cum_severe_n1      |
      | cum_deaths_n      | cum_critical_n1    |
    Then we obtain the causal DAG for 12 weeks ... passed in 0.019s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.1 " status="passed" time="0.480637"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.1 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=baseline ... passed in 0.001s
    When we run the model with interventions=standardTest ... passed in 0.000s
    Then the cum_deaths_12 should be < baseline ... passed in 0.469s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['baseline']::<class 'numpy.ndarray'>
  treatment_val: ['standardTest']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [5.]
treatment_val [10.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -132.80000000000004
95% Confidence Intervals: [-30.38, -22.74]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.2 " status="passed" time="0.11275"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.2 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=baseline ... passed in 0.000s
    When we run the model with interventions=noTest ... passed in 0.000s
    Then the cum_deaths_12 should be = baseline ... passed in 0.102s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['baseline']::<class 'numpy.ndarray'>
  treatment_val: ['noTest']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [5.]
treatment_val [6.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 0.7000000000000739
95% Confidence Intervals: [-21.64, 23.04]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.3 " status="failed" time="0.111757"><failure type="AssertionError" message="Expected estimate &lt; 0, got 40.91 &lt; -96.00000000000003 &lt; 55.09">
<![CDATA[
Failing step: Then the cum_deaths_12 should be < standardTest ... failed in 0.102s
Location: features/compare_interventions.feature:111
Assertion Failed: Expected estimate < 0, got 40.91 < -96.00000000000003 < 55.09
Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTest']::<class 'numpy.ndarray'>
  treatment_val: ['optimalTest']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [10.]
treatment_val [8.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -96.00000000000003
95% Confidence Intervals: [40.91, 55.09]

Captured logging:
WARNING:dowhy.causal_model:Causal Graph not provided. DoWhy will construct a graph based on data inputs.
INFO:dowhy.causal_model:Model to find the causal effect of treatment ['interventions'] on outcome ['cum_deaths_12']
INFO:dowhy.causal_estimator:b: cum_deaths_12~interventions
INFO:dowhy.causal_estimator:INFO: Using Linear Regression Estimator]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.3 
    Given a simulation with parameters ... passed in 0.004s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=standardTest ... passed in 0.000s
    When we run the model with interventions=optimalTest ... passed in 0.000s
    Then the cum_deaths_12 should be < standardTest ... failed in 0.102s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTest']::<class 'numpy.ndarray'>
  treatment_val: ['optimalTest']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [10.]
treatment_val [8.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -96.00000000000003
95% Confidence Intervals: [40.91, 55.09]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.4 " status="passed" time="0.113697"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.4 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=baseline ... passed in 0.000s
    When we run the model with interventions=standardTrace ... passed in 0.001s
    Then the cum_deaths_12 should be < baseline ... passed in 0.102s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['baseline']::<class 'numpy.ndarray'>
  treatment_val: ['standardTrace']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [5.]
treatment_val [11.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -213.00000000000014
95% Confidence Intervals: [-37.66, -33.34]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.5 " status="passed" time="0.111729"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.5 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=standardTest ... passed in 0.000s
    When we run the model with interventions=standardTrace ... passed in 0.000s
    Then the cum_deaths_12 should be < standardTest ... passed in 0.101s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTest']::<class 'numpy.ndarray'>
  treatment_val: ['standardTrace']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [10.]
treatment_val [11.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -80.20000000000005
95% Confidence Intervals: [-94.52, -65.88]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.6 " status="passed" time="0.108765"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.6 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=standardTest ... passed in 0.000s
    When we run the model with interventions=noTrace ... passed in 0.001s
    Then the cum_deaths_12 should be = standardTest ... passed in 0.097s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTest']::<class 'numpy.ndarray'>
  treatment_val: ['noTrace']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [10.]
treatment_val [7.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -1.4210854715202004e-14
95% Confidence Intervals: [-6.67, 6.67]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.7 " status="failed" time="0.109276"><failure type="AssertionError" message="Expected estimate &lt; 0, got 5.01 &lt; -12.399999999999995 &lt; 7.39">
<![CDATA[
Failing step: Then the cum_deaths_12 should be < standardTrace ... failed in 0.097s
Location: features/compare_interventions.feature:111
Assertion Failed: Expected estimate < 0, got 5.01 < -12.399999999999995 < 7.39
Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTrace']::<class 'numpy.ndarray'>
  treatment_val: ['optimalTrace']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [11.]
treatment_val [9.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -12.399999999999995
95% Confidence Intervals: [5.01, 7.39]

Captured logging:
WARNING:dowhy.causal_model:Causal Graph not provided. DoWhy will construct a graph based on data inputs.
INFO:dowhy.causal_model:Model to find the causal effect of treatment ['interventions'] on outcome ['cum_deaths_12']
INFO:dowhy.causal_estimator:b: cum_deaths_12~interventions
INFO:dowhy.causal_estimator:INFO: Using Linear Regression Estimator]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.7 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=standardTrace ... passed in 0.001s
    When we run the model with interventions=optimalTrace ... passed in 0.000s
    Then the cum_deaths_12 should be < standardTrace ... failed in 0.097s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['standardTrace']::<class 'numpy.ndarray'>
  treatment_val: ['optimalTrace']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [11.]
treatment_val [9.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -12.399999999999995
95% Confidence Intervals: [5.01, 7.39]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Test and trace -- @1.8 " status="passed" time="0.11129"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Test and trace -- @1.8 
    Given a simulation with parameters ... passed in 0.006s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with interventions=baseline ... passed in 0.000s
    When we run the model with interventions=traceNoTest ... passed in 0.000s
    Then the cum_deaths_12 should be = baseline ... passed in 0.099s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['interventions']
  outcome_var: ['cum_deaths_12']
  control_val: ['baseline']::<class 'numpy.ndarray'>
  treatment_val: ['traceNoTest']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'100000': 0, '50000': 1, 'Japan': 2, 'Rwanda': 3, 'UK': 4, 'baseline': 5, 'noTest': 6, 'noTrace': 7, 'optimalTest': 8, 'optimalTrace': 9, 'standardTest': 10, 'standardTrace': 11, 'traceNoTest': 12}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['interventions']: [CategoricalDtype(categories=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], ordered=False)]
control_val [5.]
treatment_val [12.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
       d                                    
────────────────(Expectation(cum_deaths_12))
d[interventions]                            
Estimand assumption 1, Unconfoundedness: If U→{interventions} and U→cum_deaths_12 then P(cum_deaths_12|interventions,,U) = P(cum_deaths_12|interventions,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 0.0
95% Confidence Intervals: [-2.59, 2.59]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Locations -- @1.1 " status="failed" time="0.104778"><failure type="AssertionError" message="Expected estimate &gt; 0, got -111.64 &lt; 149.8818181818179 &lt; -38.25">
<![CDATA[
Failing step: Then the cum_deaths_12 should be > UK ... failed in 0.094s
Location: features/compare_interventions.feature:126
Assertion Failed: Expected estimate > 0, got -111.64 < 149.8818181818179 < -38.25
Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['location']
  outcome_var: ['cum_deaths_12']
  control_val: ['UK']::<class 'numpy.ndarray'>
  treatment_val: ['Japan']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'Japan': 0, 'Rwanda': 1, 'UK': 2}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['location']: [CategoricalDtype(categories=[0, 1, 2], ordered=False)]
control_val [2.]
treatment_val [0.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
     d                                 
───────────(Expectation(cum_deaths_12))
d[location]                            
Estimand assumption 1, Unconfoundedness: If U→{location} and U→cum_deaths_12 then P(cum_deaths_12|location,,U) = P(cum_deaths_12|location,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 149.8818181818179
95% Confidence Intervals: [-111.64, -38.25]

Captured logging:
WARNING:dowhy.causal_model:Causal Graph not provided. DoWhy will construct a graph based on data inputs.
INFO:dowhy.causal_model:Model to find the causal effect of treatment ['location'] on outcome ['cum_deaths_12']
INFO:dowhy.causal_estimator:b: cum_deaths_12~location
INFO:dowhy.causal_estimator:INFO: Using Linear Regression Estimator]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Locations -- @1.1 
    Given a simulation with parameters ... passed in 0.004s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with location=UK ... passed in 0.000s
    When we run the model with location=Japan ... passed in 0.001s
    Then the cum_deaths_12 should be > UK ... failed in 0.094s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['location']
  outcome_var: ['cum_deaths_12']
  control_val: ['UK']::<class 'numpy.ndarray'>
  treatment_val: ['Japan']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'Japan': 0, 'Rwanda': 1, 'UK': 2}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['location']: [CategoricalDtype(categories=[0, 1, 2], ordered=False)]
control_val [2.]
treatment_val [0.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
     d                                 
───────────(Expectation(cum_deaths_12))
d[location]                            
Estimand assumption 1, Unconfoundedness: If U→{location} and U→cum_deaths_12 then P(cum_deaths_12|location,,U) = P(cum_deaths_12|location,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 149.8818181818179
95% Confidence Intervals: [-111.64, -38.25]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Locations -- @1.2 " status="failed" time="0.104721"><failure type="AssertionError" message="Expected estimate &lt; 0, got 50.08 &lt; -123.31818181818225 &lt; 196.56">
<![CDATA[
Failing step: Then the cum_deaths_12 should be < UK ... failed in 0.094s
Location: features/compare_interventions.feature:126
Assertion Failed: Expected estimate < 0, got 50.08 < -123.31818181818225 < 196.56
Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['location']
  outcome_var: ['cum_deaths_12']
  control_val: ['UK']::<class 'numpy.ndarray'>
  treatment_val: ['Rwanda']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'Japan': 0, 'Rwanda': 1, 'UK': 2}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['location']: [CategoricalDtype(categories=[0, 1, 2], ordered=False)]
control_val [2.]
treatment_val [1.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
     d                                 
───────────(Expectation(cum_deaths_12))
d[location]                            
Estimand assumption 1, Unconfoundedness: If U→{location} and U→cum_deaths_12 then P(cum_deaths_12|location,,U) = P(cum_deaths_12|location,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -123.31818181818225
95% Confidence Intervals: [50.08, 196.56]

Captured logging:
WARNING:dowhy.causal_model:Causal Graph not provided. DoWhy will construct a graph based on data inputs.
INFO:dowhy.causal_model:Model to find the causal effect of treatment ['location'] on outcome ['cum_deaths_12']
INFO:dowhy.causal_estimator:b: cum_deaths_12~location
INFO:dowhy.causal_estimator:INFO: Using Linear Regression Estimator]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Locations -- @1.2 
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with location=UK ... passed in 0.000s
    When we run the model with location=Rwanda ... passed in 0.000s
    Then the cum_deaths_12 should be < UK ... failed in 0.094s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['location']
  outcome_var: ['cum_deaths_12']
  control_val: ['UK']::<class 'numpy.ndarray'>
  treatment_val: ['Rwanda']::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
GROUPS: {'Japan': 0, 'Rwanda': 1, 'UK': 2}
Creating a causal model...
  adjustment_set []
Datatype of treatment ['location']: [CategoricalDtype(categories=[0, 1, 2], ordered=False)]
control_val [2.]
treatment_val [1.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
     d                                 
───────────(Expectation(cum_deaths_12))
d[location]                            
Estimand assumption 1, Unconfoundedness: If U→{location} and U→cum_deaths_12 then P(cum_deaths_12|location,,U) = P(cum_deaths_12|location,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: -123.31818181818225
95% Confidence Intervals: [50.08, 196.56]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Large population" status="passed" time="0.103647"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Large population
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.006s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given we run the model with pop_size=50000 ... passed in 0.000s
    When we run the model with pop_size=100000 ... passed in 0.000s
    Then the cum_infections_12 should be > control ... passed in 0.093s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['pop_size']
  outcome_var: ['cum_infections_12']
  control_val: [50000]::<class 'numpy.ndarray'>
  treatment_val: [100000]::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
Creating a causal model...
  adjustment_set []
Datatype of treatment ['pop_size']: [dtype('int64')]
control_val [50000.]
treatment_val [100000.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
     d                                     
───────────(Expectation(cum_infections_12))
d[pop_size]                                
Estimand assumption 1, Unconfoundedness: If U→{pop_size} and U→cum_infections_12 then P(cum_infections_12|pop_size,,U) = P(cum_infections_12|pop_size,)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 50683.00833333334
95% Confidence Intervals: [0.81, 1.22]

]]>
</system-out></testcase><testcase classname="compare_interventions.Compare interventions" name="Subsequent mortality (has confounding)" status="passed" time="0.119739"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Subsequent mortality (has confounding)
    Given a simulation with parameters ... passed in 0.005s
      | parameter     | value    | type |
      | quar_period   | 14       | int  |
      | n_days        | 84       | int  |
      | pop_type      | hybrid   | str  |
      | pop_size      | 50000    | int  |
      | pop_infected  | 100      | int  |
      | location      | UK       | str  |
      | interventions | baseline | str  |
    And the following variables are recorded weekly ... passed in 0.005s
      | variable        | type |
      | cum_tests       | int  |
      | n_quarantined   | int  |
      | n_exposed       | int  |
      | cum_infections  | int  |
      | cum_symptomatic | int  |
      | cum_severe      | int  |
      | cum_critical    | int  |
      | cum_deaths      | int  |
    Given a control scenario where cum_infections_7=4000 ... passed in 0.000s
    When cum_infections_7=5000 ... passed in 0.000s
    Then the cum_infections_12 should be > control ... passed in 0.110s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{'quar_period': 14, 'n_days': 84, 'pop_type': 'hybrid', 'pop_size': 50000, 'pop_infected': 100, 'location': 'UK', 'interventions': 'baseline'}
Looking for data in results/compare_interventions
Running Do Why with params
  graph: dags/compare_interventions.dot
  treatment_var: ['cum_infections_7']
  outcome_var: ['cum_infections_12']
  control_val: [4000.]::<class 'numpy.ndarray'>
  treatment_val: [5000.]::<class 'numpy.ndarray'>
  identification: True
  verbose: True
  confidence_intervals: True
  kwargs: {'method_name': 'backdoor.linear_regression'}
  effect_modifiers: []
Creating a causal model...
  adjustment_set ['cum_infections_6', 'cum_symptomatic_6', 'location', 'n_exposed_6', 'pop_infected', 'pop_size', 'pop_type']
Datatype of treatment ['cum_infections_7']: [dtype('float64')]
control_val [4000.]
treatment_val [5000.]
Identifying...
Identified estimand
Estimand type: nonparametric-ate

### Estimand : 1
Estimand name: backdoor
Estimand expression:
         d                                                                    
───────────────────(Expectation(cum_infections_12|pop_size,cum_symptomatic_6,l
d[cum_infections_7]                                                           

                                                            
ocation,cum_infections_6,pop_type,pop_infected,n_exposed_6))
                                                            
Estimand assumption 1, Unconfoundedness: If U→{cum_infections_7} and U→cum_infections_12 then P(cum_infections_12|cum_infections_7,pop_size,cum_symptomatic_6,location,cum_infections_6,pop_type,pop_infected,n_exposed_6,U) = P(cum_infections_12|cum_infections_7,pop_size,cum_symptomatic_6,location,cum_infections_6,pop_type,pop_infected,n_exposed_6)

### Estimand : 2
Estimand name: iv
No such variable found!

### Estimand : 3
Estimand name: frontdoor
No such variable found!

Estimating...
Total Effect Estimate: 37663.488791025185
95% Confidence Intervals: [23.26, 52.07]

]]>
</system-out></testcase></testsuite>