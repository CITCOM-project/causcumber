digraph "" {
	graph [newrank=True,
		rankdir=LR
	];
	subgraph cluster_inputs {
		graph [label="Model inputs"];
		MortalityProb;
		TransmissionProb;
		EncounterRate;
		MortalityTime;
		IncubationTime;
		MortalityProb_category;
		pandemic_gets_going;
		RecoveryTime;
		Infected;
	}
	subgraph cluster_outputs {
		graph [label="Model outputs"];
		peak;
		peak_infectious;
		cases;
		recovered;
		deceased;
	}
	MortalityProb -> MortalityProb_category;
	MortalityProb -> pandemic_gets_going;
	MortalityProb -> peak;
	MortalityProb -> peak_infectious;
	MortalityProb -> cases;
	MortalityProb -> recovered;
	MortalityProb -> deceased;
	TransmissionProb -> pandemic_gets_going;
	TransmissionProb -> peak;
	TransmissionProb -> peak_infectious;
	TransmissionProb -> cases;
	TransmissionProb -> recovered;
	TransmissionProb -> deceased;
	EncounterRate -> pandemic_gets_going;
	EncounterRate -> peak;
	EncounterRate -> peak_infectious;
	EncounterRate -> cases;
	EncounterRate -> recovered;
	EncounterRate -> deceased;
	MortalityTime -> pandemic_gets_going;
	MortalityTime -> peak;
	MortalityTime -> peak_infectious;
	MortalityTime -> cases;
	MortalityTime -> recovered;
	MortalityTime -> deceased;
	IncubationTime -> pandemic_gets_going;
	IncubationTime -> peak;
	IncubationTime -> peak_infectious;
	IncubationTime -> cases;
	IncubationTime -> recovered;
	IncubationTime -> deceased;
	MortalityProb_category -> peak;
	MortalityProb_category -> peak_infectious;
	MortalityProb_category -> cases;
	MortalityProb_category -> recovered;
	MortalityProb_category -> deceased;
	pandemic_gets_going -> peak;
	pandemic_gets_going -> peak_infectious;
	pandemic_gets_going -> cases;
	pandemic_gets_going -> recovered;
	pandemic_gets_going -> deceased;
	RecoveryTime -> pandemic_gets_going;
	RecoveryTime -> peak;
	RecoveryTime -> peak_infectious;
	RecoveryTime -> cases;
	RecoveryTime -> recovered;
	RecoveryTime -> deceased;
	Infected -> pandemic_gets_going;
	Infected -> peak;
	Infected -> peak_infectious;
	Infected -> cases;
	Infected -> recovered;
	Infected -> deceased;
	peak -> peak_infectious;
}
